{"version":3,"file":"entry-points.js","sourceRoot":"","sources":["../../../src/modules/entry-points.ts"],"names":[],"mappings":"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","sourcesContent":["namespace EntryPoints {\n  /**\n   * Homepage trigger\n   */\n  export function onHomepage(_e: GoogleAppsScript.Addons.EventObject): GoogleAppsScript.Card_Service.Card {\n    try {\n      AppLogger.info('Homepage opened');\n      const settings = Config.getSettings();\n      return UI.buildMainCard(settings);\n    } catch (error) {\n      return ErrorHandling.handleError(error);\n    }\n  }\n  \n  /**\n   * Gmail message trigger\n   */\n  export function onGmailMessage(e: GoogleAppsScript.Addons.EventObject): GoogleAppsScript.Card_Service.Card {\n    try {\n      AppLogger.info('Gmail message opened');\n      \n      if (!e.gmail || !e.gmail.messageId) {\n        // No separate error card - return settings card\n        const settings = Config.getSettings();\n        return UI.buildSettingsCard(settings);\n      }\n      \n      return buildMessageCard(e);\n      \n    } catch (error) {\n      return ErrorHandling.handleError(error);\n    }\n  }\n  \n  /**\n   * Build thread-specific card - CARD 3\n   */\n  export function buildMessageCard(e: GoogleAppsScript.Addons.EventObject): GoogleAppsScript.Card_Service.Card {\n    const settings = Config.getSettings();\n    \n    // Get email context for thread card\n    let emailContext = null;\n    try {\n      const message = GmailService.getCurrentMessage(e);\n      if (message) {\n        emailContext = {\n          subject: message.getSubject(),\n          sender: message.getFrom()\n        };\n      }\n    } catch (error) {\n      AppLogger.warn('Could not get email context', error);\n    }\n    \n    return UI.buildThreadCard(settings, emailContext);\n  }\n  \n  /**\n   * Compose action trigger\n   */\n  export function onComposeAction(_e: GoogleAppsScript.Addons.EventObject): GoogleAppsScript.Card_Service.Card {\n    try {\n      AppLogger.info('Compose action triggered');\n      return UI.buildMainCard(Config.getSettings());\n    } catch (error) {\n      return ErrorHandling.handleError(error);\n    }\n  }\n  \n  /**\n   * Settings universal action - Always show CARD 1 (Settings)\n   */\n  export function onSettings(_e: GoogleAppsScript.Addons.EventObject): GoogleAppsScript.Card_Service.Card {\n    try {\n      AppLogger.info('Settings opened');\n      const settings = Config.getSettings();\n      return UI.buildSettingsCard(settings);\n    } catch (error) {\n      return ErrorHandling.handleError(error);\n    }\n  }\n  \n  /**\n   * Help universal action\n   */\n  export function onHelp(_e: GoogleAppsScript.Addons.EventObject): GoogleAppsScript.Card_Service.Card {\n    try {\n      AppLogger.info('Help opened');\n      return UI.buildHelpCard();\n    } catch (error) {\n      return ErrorHandling.handleError(error);\n    }\n  }\n  \n  /**\n   * Prompt Editor universal action - goes to Settings card\n   */\n  export function onPromptEditor(_e: GoogleAppsScript.Addons.EventObject): GoogleAppsScript.Card_Service.Card {\n    try {\n      AppLogger.info('Prompt Editor opened - redirecting to Settings');\n      const settings = Config.getSettings();\n      return UI.buildSettingsCard(settings);\n    } catch (error) {\n      return ErrorHandling.handleError(error);\n    }\n  }\n  \n  /**\n   * Style Analysis universal action - goes to Settings card\n   */\n  export function onStyleAnalysis(_e: GoogleAppsScript.Addons.EventObject): GoogleAppsScript.Card_Service.Card {\n    try {\n      AppLogger.info('Style Analysis opened - redirecting to Settings');\n      const settings = Config.getSettings();\n      return UI.buildSettingsCard(settings);\n    } catch (error) {\n      return ErrorHandling.handleError(error);\n    }\n  }\n}"]}