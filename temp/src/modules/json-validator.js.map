{"version":3,"file":"json-validator.js","sourceRoot":"","sources":["../../../src/modules/json-validator.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * JSON Validator Module\n * Simple, modular validation for AI responses - KISS principle\n * No external dependencies - works perfectly in Google Apps Script\n */\n\nnamespace JsonValidator {\n  \n  /**\n   * Validate and parse JSON safely\n   */\n  export function parseJson<T>(jsonString: string, context: string): T | null {\n    if (!jsonString || typeof jsonString !== 'string') {\n      AppLogger.error(`Invalid JSON input in ${context}`, {\n        type: typeof jsonString,\n        value: jsonString\n      });\n      return null;\n    }\n    \n    try {\n      // Remove any BOM or invalid characters at the start\n      const cleanJson = jsonString.trim().replace(/^\\uFEFF/, '');\n      \n      // Basic validation\n      if (!cleanJson.startsWith('{') && !cleanJson.startsWith('[')) {\n        AppLogger.error(`JSON does not start with { or [ in ${context}`, {\n          start: cleanJson.substring(0, 50)\n        });\n        return null;\n      }\n      \n      return JSON.parse(cleanJson);\n    } catch (error) {\n      // Log detailed error information\n      const errorDetails: any = {\n        message: error instanceof Error ? error.message : String(error),\n        context,\n        jsonLength: jsonString.length\n      };\n      \n      // Try to find the error position\n      if (error instanceof SyntaxError && error.message.includes('position')) {\n        const match = error.message.match(/position (\\d+)/);\n        if (match && match[1]) {\n          const position = parseInt(match[1]);\n          errorDetails.errorPosition = position;\n          errorDetails.nearError = jsonString.substring(\n            Math.max(0, position - 50),\n            Math.min(jsonString.length, position + 50)\n          );\n        }\n      }\n      \n      AppLogger.error(`JSON parse failed in ${context}`, errorDetails);\n      return null;\n    }\n  }\n\n  /**\n   * Validate writing style response\n   */\n  export function validateWritingStyle(data: any): Types.WritingStyle | null {\n    if (!data || typeof data !== 'object') {\n      AppLogger.error('Writing style validation failed: not an object');\n      return null;\n    }\n\n    // Required fields with defaults\n    return {\n      greetings: Array.isArray(data.greetings) ? data.greetings : Constants.STYLE.DEFAULT_GREETINGS,\n      closings: Array.isArray(data.closings) ? data.closings : Constants.STYLE.DEFAULT_CLOSINGS,\n      sentencePatterns: Array.isArray(data.sentencePatterns) ? data.sentencePatterns : [],\n      vocabulary: Array.isArray(data.vocabulary) ? data.vocabulary : [],\n      formalityLevel: isValidNumber(data.formalityLevel, 1, 5) ? \n        data.formalityLevel : Constants.STYLE.FORMALITY_NEUTRAL,\n      averageSentenceLength: isValidNumber(data.averageSentenceLength, 1, 100) ? \n        data.averageSentenceLength : Constants.STYLE.DEFAULT_AVG_SENTENCE_LENGTH,\n      emailLength: isValidEmailLength(data.emailLength) ? data.emailLength : 'medium',\n      punctuationStyle: isValidPunctuationStyle(data.punctuationStyle) ? \n        data.punctuationStyle : Constants.STYLE.DEFAULT_PUNCTUATION\n    };\n  }\n\n  /**\n   * Validate user profile response\n   */\n  export function validateUserProfile(data: any): Types.UserProfile | null {\n    if (!data || typeof data !== 'object' || !data.email) {\n      AppLogger.error('User profile validation failed: missing required fields');\n      return null;\n    }\n\n    const profile: Types.UserProfile = {\n      email: String(data.email)\n    };\n\n    // Optional fields\n    if (data.name) {\n      profile.name = String(data.name);\n    }\n    \n    if (data.identity && typeof data.identity === 'object') {\n      profile.identity = {\n        role: String(data.identity.role || 'User'),\n        expertise: Array.isArray(data.identity.expertise) ? data.identity.expertise : [],\n        communicationStyle: String(data.identity.communicationStyle || 'Professional')\n      };\n    }\n\n    if (data.personality && typeof data.personality === 'object') {\n      profile.personality = {\n        formality: isValidNumber(data.personality.formality, 1, 5) ? data.personality.formality : 3,\n        directness: isValidNumber(data.personality.directness, 1, 5) ? data.personality.directness : 3,\n        warmth: isValidNumber(data.personality.warmth, 1, 5) ? data.personality.warmth : 3,\n        detailLevel: isValidNumber(data.personality.detailLevel, 1, 5) ? data.personality.detailLevel : 3\n      };\n    }\n\n    return profile;\n  }\n\n  /**\n   * Create response schema for Gemini API\n   */\n  export function createWritingStyleSchema(): any {\n    return {\n      type: 'object',\n      properties: {\n        greetings: { type: 'array', items: { type: 'string' } },\n        closings: { type: 'array', items: { type: 'string' } },\n        sentencePatterns: { type: 'array', items: { type: 'string' } },\n        vocabulary: { type: 'array', items: { type: 'string' } },\n        formalityLevel: { type: 'number', minimum: 1, maximum: 5 },\n        averageSentenceLength: { type: 'number', minimum: 1 },\n        emailLength: { type: 'string', enum: ['short', 'medium', 'long'] },\n        punctuationStyle: { type: 'string', enum: ['minimal', 'standard', 'expressive'] }\n      },\n      required: ['greetings', 'closings', 'formalityLevel', 'averageSentenceLength', 'punctuationStyle']\n    };\n  }\n\n  /**\n   * Create response schema for user profile\n   */\n  export function createUserProfileSchema(): any {\n    return {\n      type: 'object',\n      properties: {\n        email: { type: 'string' },\n        name: { type: 'string', nullable: true },\n        identity: {\n          type: 'object',\n          properties: {\n            role: { type: 'string' },\n            expertise: { type: 'array', items: { type: 'string' } },\n            communicationStyle: { type: 'string' }\n          },\n          required: ['role', 'expertise', 'communicationStyle']\n        },\n        personality: {\n          type: 'object',\n          properties: {\n            formality: { type: 'number', minimum: 1, maximum: 5 },\n            directness: { type: 'number', minimum: 1, maximum: 5 },\n            warmth: { type: 'number', minimum: 1, maximum: 5 },\n            detailLevel: { type: 'number', minimum: 1, maximum: 5 }\n          },\n          required: ['formality', 'directness', 'warmth', 'detailLevel']\n        }\n      },\n      required: ['email']\n    };\n  }\n\n  // Simple helper validators\n  function isValidNumber(value: any, min: number, max: number): boolean {\n    return typeof value === 'number' && value >= min && value <= max;\n  }\n\n  function isValidEmailLength(value: any): boolean {\n    return value === 'short' || value === 'medium' || value === 'long';\n  }\n\n  function isValidPunctuationStyle(value: any): boolean {\n    return value === 'minimal' || value === 'standard' || value === 'expressive';\n  }\n}"]}