{"version":3,"file":"debug-logger.js","sourceRoot":"","sources":["../../../src/modules/debug-logger.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Debug Logger - Daily Spreadsheet Logging System\n * \n * COMPREHENSIVE DEBUGGING:\n * - Creates daily spreadsheets for all logs\n * - Logs ALL AI requests and responses  \n * - Logs ALL logic calls and decisions\n * - Organized in special folder with daily rotation\n * - Accessible from Settings for easy debugging\n */\n\nnamespace DebugLogger {\n  let dailySpreadsheetId: string | null = null;\n  let currentDate: string | null = null;\n  \n  interface LogEntry {\n    timestamp: string;\n    level: 'INFO' | 'WARN' | 'ERROR' | 'DEBUG' | 'AI_REQUEST' | 'AI_RESPONSE' | 'LOGIC' | 'USER_ACTION';\n    component: string;\n    message: string;\n    data?: any;\n    userId?: string;\n    sessionId?: string;\n  }\n\n  /**\n   * Get or create today's debug spreadsheet\n   */\n  function getTodaysSpreadsheet(): GoogleAppsScript.Spreadsheet.Spreadsheet {\n    const todayDate = Utilities.formatDate(new Date(), 'GMT', 'yyyy-MM-dd');\n    \n    // Check if we need a new spreadsheet for today\n    if (currentDate !== todayDate || !dailySpreadsheetId) {\n      currentDate = todayDate;\n      \n      const fileName = `Answer-As-Me-Debug-Log-${todayDate}`;\n      \n      // Try to find existing spreadsheet for today\n      const folder = getOrCreateDebugFolder();\n      const files = folder.getFilesByName(fileName);\n      \n      let spreadsheet: GoogleAppsScript.Spreadsheet.Spreadsheet;\n      \n      if (files.hasNext()) {\n        // Found existing spreadsheet\n        const file = files.next();\n        dailySpreadsheetId = file.getId();\n        spreadsheet = SpreadsheetApp.openById(dailySpreadsheetId);\n      } else {\n        // Create new spreadsheet\n        spreadsheet = SpreadsheetApp.create(fileName);\n        dailySpreadsheetId = spreadsheet.getId();\n        \n        // Move to debug folder\n        const file = DriveApp.getFileById(dailySpreadsheetId);\n        folder.addFile(file);\n        DriveApp.getRootFolder().removeFile(file);\n        \n        // Initialize sheets and headers\n        initializeSpreadsheet(spreadsheet);\n      }\n    } else {\n      // Use existing spreadsheet\n      return SpreadsheetApp.openById(dailySpreadsheetId);\n    }\n    \n    return SpreadsheetApp.openById(dailySpreadsheetId);\n  }\n\n  /**\n   * Get or create debug folder\n   */\n  function getOrCreateDebugFolder(): GoogleAppsScript.Drive.Folder {\n    const folderName = 'Answer As Me - Debug Logs';\n    const folders = DriveApp.getFoldersByName(folderName);\n    \n    if (folders.hasNext()) {\n      return folders.next();\n    } else {\n      const folder = DriveApp.createFolder(folderName);\n      folder.setDescription('Daily debug logs for Answer As Me Gmail add-on - Auto-rotated daily for debugging');\n      return folder;\n    }\n  }\n\n  /**\n   * Initialize spreadsheet with proper sheets and headers\n   */\n  function initializeSpreadsheet(spreadsheet: GoogleAppsScript.Spreadsheet.Spreadsheet): void {\n    // Rename default sheet to Main Log\n    const mainSheet = spreadsheet.getActiveSheet();\n    mainSheet.setName('Main Log');\n    \n    // Create additional sheets\n    const aiSheet = spreadsheet.insertSheet('AI Requests & Responses');\n    const logicSheet = spreadsheet.insertSheet('Logic & Decision Flow');\n    const userSheet = spreadsheet.insertSheet('User Actions');\n    const errorSheet = spreadsheet.insertSheet('Errors & Warnings');\n    \n    // Set up headers for Main Log\n    const mainHeaders = [\n      'Timestamp', 'Level', 'Component', 'Message', 'User ID', 'Session ID', 'Data (JSON)'\n    ];\n    mainSheet.getRange(1, 1, 1, mainHeaders.length).setValues([mainHeaders]);\n    mainSheet.getRange(1, 1, 1, mainHeaders.length).setFontWeight('bold');\n    mainSheet.setFrozenRows(1);\n    \n    // Set up headers for AI Sheet\n    const aiHeaders = [\n      'Timestamp', 'Type', 'Component', 'Request/Response', 'Token Count', 'Duration (ms)', 'Success', 'Data'\n    ];\n    aiSheet.getRange(1, 1, 1, aiHeaders.length).setValues([aiHeaders]);\n    aiSheet.getRange(1, 1, 1, aiHeaders.length).setFontWeight('bold');\n    aiSheet.setFrozenRows(1);\n    \n    // Set up headers for Logic Sheet\n    const logicHeaders = [\n      'Timestamp', 'Function', 'Action', 'Input', 'Output', 'Decision', 'Duration (ms)', 'Notes'\n    ];\n    logicSheet.getRange(1, 1, 1, logicHeaders.length).setValues([logicHeaders]);\n    logicSheet.getRange(1, 1, 1, logicHeaders.length).setFontWeight('bold');\n    logicSheet.setFrozenRows(1);\n    \n    // Set up headers for User Sheet\n    const userHeaders = [\n      'Timestamp', 'Action', 'Component', 'Details', 'Result', 'Error', 'User Email'\n    ];\n    userSheet.getRange(1, 1, 1, userHeaders.length).setValues([userHeaders]);\n    userSheet.getRange(1, 1, 1, userHeaders.length).setFontWeight('bold');\n    userSheet.setFrozenRows(1);\n    \n    // Set up headers for Error Sheet\n    const errorHeaders = [\n      'Timestamp', 'Level', 'Component', 'Error Message', 'Stack Trace', 'Context', 'User Impact'\n    ];\n    errorSheet.getRange(1, 1, 1, errorHeaders.length).setValues([errorHeaders]);\n    errorSheet.getRange(1, 1, 1, errorHeaders.length).setFontWeight('bold');\n    errorSheet.setFrozenRows(1);\n    \n    // Auto-resize columns\n    [mainSheet, aiSheet, logicSheet, userSheet, errorSheet].forEach(sheet => {\n      sheet.autoResizeColumns(1, sheet.getLastColumn());\n    });\n  }\n\n  /**\n   * Log general message to main log\n   */\n  export function log(level: LogEntry['level'], component: string, message: string, data?: any): void {\n    try {\n      const spreadsheet = getTodaysSpreadsheet();\n      const sheet = spreadsheet.getSheetByName('Main Log');\n      \n      if (!sheet) {\n        return;\n      }\n      \n      const userId = Session.getActiveUser().getEmail();\n      const sessionId = Utilities.getUuid().substring(0, 8);\n      const timestamp = Utilities.formatDate(new Date(), 'GMT', 'yyyy-MM-dd HH:mm:ss.SSS');\n      \n      const rowData = [\n        timestamp,\n        level,\n        component,\n        message,\n        userId,\n        sessionId,\n        data ? JSON.stringify(data, null, 2) : ''\n      ];\n      \n      sheet.appendRow(rowData);\n      \n    } catch (error) {\n      // Fallback to console if spreadsheet logging fails\n      console.error('Debug logging failed:', error);\n    }\n  }\n\n  /**\n   * Log AI request/response\n   */\n  export function logAI(type: 'REQUEST' | 'RESPONSE', component: string, content: string, metadata?: any): void {\n    try {\n      const spreadsheet = getTodaysSpreadsheet();\n      const sheet = spreadsheet.getSheetByName('AI Requests & Responses');\n      \n      if (!sheet) {\n        return;\n      }\n      \n      const timestamp = Utilities.formatDate(new Date(), 'GMT', 'yyyy-MM-dd HH:mm:ss.SSS');\n      const tokenCount = content.length; // Rough estimate\n      \n      const rowData = [\n        timestamp,\n        type,\n        component,\n        content.substring(0, 1000) + (content.length > 1000 ? '...' : ''), // Truncate for readability\n        tokenCount,\n        metadata?.duration || 0,\n        metadata?.success || 'unknown',\n        JSON.stringify(metadata || {}, null, 2)\n      ];\n      \n      sheet.appendRow(rowData);\n      \n      // Also log to main log\n      log(type === 'REQUEST' ? 'AI_REQUEST' : 'AI_RESPONSE', component, `AI ${type.toLowerCase()}`, {\n        contentLength: content.length,\n        ...metadata\n      });\n      \n    } catch (error) {\n      console.error('AI logging failed:', error);\n    }\n  }\n\n  /**\n   * Log logic and decision flow\n   */\n  export function logLogic(\n    functionName: string, \n    action: string, \n    input?: any, \n    output?: any, \n    decision?: string, \n    duration?: number, \n    notes?: string\n  ): void {\n    try {\n      const spreadsheet = getTodaysSpreadsheet();\n      const sheet = spreadsheet.getSheetByName('Logic & Decision Flow');\n      \n      if (!sheet) {\n        return;\n      }\n      \n      const timestamp = Utilities.formatDate(new Date(), 'GMT', 'yyyy-MM-dd HH:mm:ss.SSS');\n      \n      const rowData = [\n        timestamp,\n        functionName,\n        action,\n        input ? JSON.stringify(input, null, 2) : '',\n        output ? JSON.stringify(output, null, 2) : '',\n        decision || '',\n        duration || 0,\n        notes || ''\n      ];\n      \n      sheet.appendRow(rowData);\n      \n      // Also log to main log\n      log('LOGIC', functionName, `${action}: ${decision || 'completed'}`, {\n        input: input,\n        output: output,\n        duration: duration\n      });\n      \n    } catch (error) {\n      console.error('Logic logging failed:', error);\n    }\n  }\n\n  /**\n   * Log user action\n   */\n  export function logUserAction(\n    action: string, \n    component: string, \n    details?: any, \n    result?: string, \n    error?: string\n  ): void {\n    try {\n      const spreadsheet = getTodaysSpreadsheet();\n      const sheet = spreadsheet.getSheetByName('User Actions');\n      \n      if (!sheet) {\n        return;\n      }\n      \n      const timestamp = Utilities.formatDate(new Date(), 'GMT', 'yyyy-MM-dd HH:mm:ss.SSS');\n      const userEmail = Session.getActiveUser().getEmail();\n      \n      const rowData = [\n        timestamp,\n        action,\n        component,\n        details ? JSON.stringify(details, null, 2) : '',\n        result || '',\n        error || '',\n        userEmail\n      ];\n      \n      sheet.appendRow(rowData);\n      \n      // Also log to main log\n      log('USER_ACTION', component, `User ${action}`, {\n        details: details,\n        result: result,\n        error: error\n      });\n      \n    } catch (error) {\n      console.error('User action logging failed:', error);\n    }\n  }\n\n  /**\n   * Log error with full context\n   */\n  export function logError(component: string, error: Error | string, context?: any, userImpact?: string): void {\n    try {\n      const spreadsheet = getTodaysSpreadsheet();\n      const sheet = spreadsheet.getSheetByName('Errors & Warnings');\n      \n      if (!sheet) {\n        return;\n      }\n      \n      const timestamp = Utilities.formatDate(new Date(), 'GMT', 'yyyy-MM-dd HH:mm:ss.SSS');\n      const errorMessage = error instanceof Error ? error.message : error;\n      const stackTrace = error instanceof Error ? error.stack || '' : '';\n      \n      const rowData = [\n        timestamp,\n        'ERROR',\n        component,\n        errorMessage,\n        stackTrace,\n        context ? JSON.stringify(context, null, 2) : '',\n        userImpact || 'Unknown impact'\n      ];\n      \n      sheet.appendRow(rowData);\n      \n      // Also log to main log\n      log('ERROR', component, errorMessage, {\n        context: context,\n        userImpact: userImpact,\n        stackTrace: stackTrace\n      });\n      \n    } catch (logError) {\n      console.error('Error logging failed:', logError);\n      console.error('Original error:', error);\n    }\n  }\n\n  /**\n   * Get today's spreadsheet URL for settings display\n   */\n  export function getTodaysSpreadsheetUrl(): string | null {\n    try {\n      const spreadsheet = getTodaysSpreadsheet();\n      return spreadsheet.getUrl();\n    } catch (error) {\n      console.error('Failed to get spreadsheet URL:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Get today's spreadsheet ID\n   */\n  export function getTodaysSpreadsheetId(): string | null {\n    try {\n      getTodaysSpreadsheet(); // Ensure it exists\n      return dailySpreadsheetId;\n    } catch (error) {\n      console.error('Failed to get spreadsheet ID:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Clean up old logs (keep last 30 days)\n   */\n  export function cleanupOldLogs(): void {\n    try {\n      const folder = getOrCreateDebugFolder();\n      const files = folder.getFiles();\n      const thirtyDaysAgo = new Date();\n      thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n      \n      let deletedCount = 0;\n      while (files.hasNext()) {\n        const file = files.next();\n        if (file.getLastUpdated() < thirtyDaysAgo) {\n          file.setTrashed(true);\n          deletedCount++;\n        }\n      }\n      \n      log('INFO', 'DebugLogger', `Cleaned up ${deletedCount} old log files`);\n    } catch (error) {\n      logError(\n        'DebugLogger', \n        error instanceof Error ? error : String(error), \n        null, \n        'Log cleanup failed - may accumulate files'\n      );\n    }\n  }\n\n  // Convenience methods for common logging patterns\n  export function info(component: string, message: string, data?: any): void {\n    log('INFO', component, message, data);\n  }\n\n  export function warn(component: string, message: string, data?: any): void {\n    log('WARN', component, message, data);\n  }\n\n  export function error(component: string, message: string, data?: any): void {\n    log('ERROR', component, message, data);\n  }\n\n  export function debug(component: string, message: string, data?: any): void {\n    log('DEBUG', component, message, data);\n  }\n}"]}