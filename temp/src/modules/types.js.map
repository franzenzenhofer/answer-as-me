{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/modules/types.ts"],"names":[],"mappings":";AAAA,IAAU,KAAK,CA0Kd;AA1KD,WAAU,KAAK;IA6Bb;;OAEG;IACH,IAAY,YAKX;IALD,WAAY,YAAY;QACtB,+BAAe,CAAA;QACf,mCAAmB,CAAA;QACnB,qCAAqB,CAAA;QACrB,6BAAa,CAAA;IACf,CAAC,EALW,YAAY,GAAZ,kBAAY,KAAZ,kBAAY,QAKvB;IAED;;OAEG;IACH,IAAY,cAIX;IAJD,WAAY,cAAc;QACxB,iCAAe,CAAA;QACf,mCAAiB,CAAA;QACjB,+BAAa,CAAA;IACf,CAAC,EAJW,cAAc,GAAd,oBAAc,KAAd,oBAAc,QAIzB;AA4HH,CAAC,EA1KS,KAAK,KAAL,KAAK,QA0Kd","sourcesContent":["namespace Types {\n  /**\n   * Configuration for the add-on\n   */\n  export interface Config {\n    apiKey: string;\n    responseMode: ResponseMode;\n    autoReply: boolean;\n    formalityLevel: number; // 1-5\n    responseLength: ResponseLength;\n    customInstructions: string;\n    signature: string;\n  }\n\n  /**\n   * Form input values from Google Apps Script\n   */\n  export interface FormInputs {\n    [key: string]: string[] | undefined;\n    apiKey?: string[];\n    responseMode?: string[];\n    autoReply?: string[];\n    formalityLevel?: string[];\n    responseLength?: string[];\n    customInstructions?: string[];\n    signature?: string[];\n    editedResponse?: string[];\n  }\n\n  /**\n   * Response generation modes\n   */\n  export enum ResponseMode {\n    DRAFT = 'draft',\n    SUGGEST = 'suggest',\n    TEMPLATE = 'template',\n    AUTO = 'auto'\n  }\n\n  /**\n   * Response length preferences\n   */\n  export enum ResponseLength {\n    SHORT = 'short',\n    MEDIUM = 'medium',\n    LONG = 'long'\n  }\n\n  /**\n   * Email context for processing\n   */\n  export interface EmailContext {\n    threadId: string;\n    messageId: string;\n    from: string;\n    to: string;\n    subject: string;\n    body: string;\n    date: GoogleAppsScript.Base.Date;\n    isReply: boolean;\n    previousMessages?: EmailMessage[];\n    senderEmail?: string;\n    senderName?: string;\n    recipients?: string[];\n    threadHistory?: EmailMessage[];\n    originalMessage?: EmailMessage;\n  }\n\n  /**\n   * Individual email message\n   */\n  export interface EmailMessage {\n    from: string;\n    to: string;\n    date: GoogleAppsScript.Base.Date;\n    body: string;\n  }\n\n  /**\n   * Writing style profile\n   */\n  export interface WritingStyle {\n    greetings: string[];\n    closings: string[];\n    sentencePatterns: string[];\n    vocabulary: string[];\n    formalityLevel: number;\n    averageSentenceLength: number;\n    emailLength: string;\n    punctuationStyle: string;\n  }\n\n  /**\n   * User profile for AI assistant\n   */\n  export interface UserProfile {\n    email: string;\n    name?: string;\n    identity?: {\n      role: string;\n      expertise: string[];\n      communicationStyle: string;\n    };\n    personality?: {\n      formality: number;\n      directness: number;\n      warmth: number;\n      detailLevel: number;\n    };\n    patterns?: {\n      greetings: {\n        formal: string[];\n        casual: string[];\n        client: string[];\n      };\n      closings: {\n        formal: string[];\n        casual: string[];\n        client: string[];\n      };\n    };\n    vocabulary?: {\n      common: string[];\n      avoided: string[];\n      professional: string[];\n    };\n    rules?: string[];\n  }\n\n  /**\n   * AI response from Gemini\n   */\n  export interface AIResponse {\n    success: boolean;\n    response?: string;\n    error?: string;\n    confidence?: number;\n  }\n\n  /**\n   * Form input data\n   */\n  export interface FormData {\n    apiKey?: string[];\n    responseMode?: string[];\n    autoReply?: string[];\n    formalityLevel?: string[];\n    responseLength?: string[];\n    customInstructions?: string[];\n    signature?: string[];\n  }\n  \n  /**\n   * Extended EventObject with form inputs\n   */\n  export interface ExtendedEventObject extends GoogleAppsScript.Addons.EventObject {\n    formInputs?: FormData;\n    parameters?: { [key: string]: string };\n  }\n\n  /**\n   * Processing result\n   */\n  export interface ProcessingResult {\n    success: boolean;\n    message: string;\n    responseText?: string;\n    draftId?: string;\n    error?: string;\n  }\n}"]}